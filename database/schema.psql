CREATE DATABASE software_engineering_iteration2;

\c software_engineering_iteration2;

CREATE USER admin ON DATABASE 'software_engineering_iteration2' WITH PASSWORD '1234' SUPERUSER;

-- DOUBLE CHECK THE DIFFERENT OPTIONS
CREATE TYPE notification_enum AS ENUM ('Daily', 'Weekly');

-- DOUBLE CHECK THE DIFFERENT OPTIONS
CREATE TYPE role_enum AS ENUM ('Editor', 'Viewer');

-- DOUBLE CHECK THE OPTIONS
CREATE TYPE tags_enum AS ENUM ('Science', 'Research', 'Maths', 'Group', 'Individual', 'Hard', 'Normal', 'Easy');

-- DOUBLE CHECK THE OPTIONS
CREATE TYPE notification_enum AS ENUM ('Never', 'Daily', 'Weekly', 'Monthly');

-- DOUBLE CHECK THE OPTIONS
CREATE TYPE meeting_enum AS ENUM ('In-person', 'Online');

-- DOUBLE CHECK THE OPTIONS
CREATE TYPE theme_enum AS ENUM ('Light', 'Dark');

-- NOT DOING ANY OF THE FOREIGN KEYS YET FOR ANY TABLE

-- DONE
CREATE TABLE PROJECT (
    user_id SERIAL PRIMARY KEY,
    members_id INT NOT NULL REFERENCES MEETING(members_id),
    join_code NOT NULL VARCHAR(10),
    proj_name NOT NULL VARCHAR(20),
    deadline NOT NULL DATE,
    notification_preference NOT NULL notification_enum,
    google_drive_link VARCHAR(200),
    discord_link VARCHAR(200)
);

-- DONE
CREATE TABLE PROJECT_MEMBERS (
    members_id SERIAL PRIMARY KEY,
    project_uid INT NOT NULL REFERENCES PROJECT(project_uid),
    is_owner NOT NULL BOOL,
    role NOT NULL role_enum,
    join_date NOT NULL DATE
);

-- DONE
CREATE TABLE TASK (
    task_id SERIAL PRIMARY KEY,
    project_uid INT NOT NULL REFERENCES PROJECT(project_uid),
    task_name NOT NULL VARCHAR(50),
    parent VARCHAR(50),
    weighting INT,
    tags tags_enum
    priority NOT NULL INT,
    start_date NOT NULL DATE,
    end_date NOT NULL DATE,
    description VARCHAR(300)
    members VARCHAR(1000),
    notification_frequency NOT NULL notification_enum
);

-- DONE
CREATE TABLE MEETING (
    meeting_id SERIAL PRIMARY KEY,
    project_uid INT NOT NULL REFERENCES PROJECT(project_uid),
    meeting_type NOT NULL meeting_enum,
    start_date NOT NULL DATE,
    end_date NOT NULL DATE,
    attendees NOT NULL VARCHAR(1000),
    subject NOT NULL VARCHAR(30),
    progress NOT NULL VARCHAR(200),
    takeaway NOT NULL VARCHAR(500),
    notes VARCHAR(300)
);

-- DONE
CREATE TABLE CONTRIBUTION_REPORT (
    contribution_id SERIAL PRIMARY KEY,
    project_uid INT NOT NULL REFERENCES PROJECT(project_uid),
    members_involved VARCHAR(1000),
    task_name VARCHAR(50),
    task_weighting NOT NULL INT,
    task_start NOT NULL DATE,
    task_date NOT NULL DATE
);

-- DONE
CREATE TABLE USER(
    user_id SERIAL PRIMARY KEY,
    username NOT NULL VARCHAR(100),
    email NOT NULL VARCHAR(150),
    user_password NOT NULL VARCHAR(100),
    theme NOT NULL theme_enum,
    profile_picture BYTEA
    currency_total NOT NULL INT,
    customize_settings VARCHAR(1000)
);

-- INTERSECTIONS BELOW

CREATE TABLE USER_PROJECT (
    user_id INT NOT NULL REFERENCES USER(user_id),
    project_uid INT NOT NULL REFERENCES PROJECT(project_uid),
    PRIMARY KEY (user_id, project_uid)
);

CREATE TABLE TASK_MEMBERS (
    task_id INT NOT NULL REFERENCES TASK(task_id),
    members_id ITN NOT NULL REFERENCES PROJECT_NUMBERS(members_id),
    PRIMARY KEY (task_id, members_id)
);